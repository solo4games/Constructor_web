version: '3'
volumes:
  pgdata:
    driver: local

services:
  nginx:
    restart: always
    image: nginx:latest
    expose:
      - 8080
    ports:
      - "443:8080"
    volumes:
      - ./yestoday_constructor_web/static:/srv/www/yestoday_constructor_web/static
      - ./yestoday_constructor_web/media:/srv/www/yestoday_constructor_web/media
      - ./yestoday_constructor_web/logs:/srv/www/yestoday_constructor_web/logs
      - ./docker/nginx:/etc/nginx/conf.d
      - /etc/ssl/:/etc/ssl
    depends_on:
      - python

  python:
    restart: always
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    volumes:
      - ./yestoday_constructor_web:/srv/www/yestoday_constructor_web
    expose:
      - 8000
    ports:
      - 8000:8000
    env_file:
      - .env
    command: "gunicorn --log-level DEBUG -c gunicorn.py yestoday_constructor_web.wsgi"

  postgres:
    image: postgres:15
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "127.0.0.1:5555:80"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
